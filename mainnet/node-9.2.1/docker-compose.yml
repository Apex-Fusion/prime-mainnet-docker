version: "3.9"
name: prime-mainnet-9.2.1

services:
  # ===========
  # prime relay
  # ===========
  #
  # standalone
  prime-relay:
    image: ghcr.io/intersectmbo/cardano-node:9.2.1
    environment:
      - CARDANO_BLOCK_PRODUCER=false
      - CARDANO_CONFIG=/config/configuration.yaml
      - CARDANO_TOPOLOGY=/config/topology.json
      - CARDANO_DATABASE_PATH=/data/db
      - CARDANO_SOCKET_PATH=/ipc/node.socket
      - CARDANO_LOG_DIR=/data/node.log
      - CARDANO_BIND_ADDR=0.0.0.0
      - CARDANO_PORT=5381
    command:
      - run
    volumes:
      - ./config/node:/config
      - node-db:/data/db
      # use either docker volume (see volumes below) or local host folder if interracting from host over ipc
      # change here affects - db-sync, ogmios
      # - node-ipc:/ipc
      - ./node-ipc:/ipc
    restart: on-failure
    healthcheck:
      # Ping the EKG port to see if it responds.
      # Assuming if EKG isn't up then the rest of cardano-node isn't either.
      test: ["CMD-SHELL", "curl -f 127.0.0.1:14788 || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  # ======
  # ogmios
  # ======
  #
  # requires: prime-relay
  ogmios:
    image: cardanosolutions/ogmios:v6.4.0
    restart: on-failure
    command: [
      "--host", "0.0.0.0",
      "--node-socket", "/ipc/node.socket",
      "--node-config", "/config/configuration.yaml"
    ]
    volumes:
      - ./config/node:/config
      # - node-ipc:/ipc
      - ./node-ipc:/ipc
    ports:
      - ${OGMIOS_PORT:-1337}:1337
    depends_on:
      prime-relay:
        condition: service_healthy

  # =================
  # postgres database
  # =================
  #
  # standalone
  # prerequsite for: dbsync
  postgres:
    image: postgres:14.10-alpine
    environment:
      - POSTGRES_LOGGING=true
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    ports:
      - ${POSTGRES_PORT:-5434}:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: on-failure
    healthcheck:
      # Use pg_isready to check postgres is running. Substitute different
      # user `postgres` if you've setup differently to config/pgpass-mainnet
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: ${POSTGRES_ARGS:--c maintenance_work_mem=1GB -c max_parallel_maintenance_workers=4}
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  # =======
  # db sync
  # =======
  #
  # requires: apex-relay and postgres
  db-sync:
    image: ghcr.io/intersectmbo/cardano-db-sync:13.2.0.2
    environment:
      - DISABLE_LEDGER=${DISABLE_LEDGER:-}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - RESTORE_SNAPSHOT=${RESTORE_SNAPSHOT:-}
      - RESTORE_RECREATE_DB=N
      - EXTRA_DB_SYNC_ARGS=--config /config_dbsync/config.json --socket-path /node-ipc/node.socket
    depends_on:
      postgres:
        condition: service_healthy
      prime-relay:
        condition: service_healthy
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    volumes:
      - db-sync-data:/var/lib/cexplorer
      # - node-ipc:/node-ipc
      - ./node-ipc:/node-ipc
      - ./config/dbsync:/config_dbsync
      - ./config/node:/config
    entrypoint: [
      "/nix/store/1fk383dn1yyawnwqdsy9xdznykl0pryv-entrypoint/bin/entrypoint",
      "--config",
      "/config_dbsync/config.json",
      "--socket-path",
      "/node-ipc/node.socket"
     ]
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

secrets:
  # prerequisite for: postgres, dbsync
  postgres_db:
    file: ./secrets/dbsync/postgres_db
  postgres_password:
    file: ./secrets/dbsync/postgres_password
  postgres_user:
    file: ./secrets/dbsync/postgres_user

volumes:
  # required for: prime-relay
  # node-ipc:
  node-db:
  # required for: postgres
  postgres:
  # required for: dbsync
  db-sync-data:
