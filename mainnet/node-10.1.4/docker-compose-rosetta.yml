services:
  rosetta-api:
    image: apexfusion/apex-rosetta-java-api:1.0
    ports:
      - 8082:8082
    environment:
      NETWORK: mainnet
      API_SPRING_PROFILES_ACTIVE: online
      API_PORT: 8082
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: rosetta
      DB_USER: ${DB_USER}
      DB_SECRET: ${DB_SECRET}
      DB_SCHEMA: mainnet
      CARDANO_NODE_VERSION: 10.1.4
      TOPOLOGY_FILEPATH: /config/node/topology.json
      GENESIS_SHELLEY_PATH: /config/node/genesis/shelley/genesis.json
      GENESIS_ALONZO_PATH: /config/node/genesis/shelley/genesis.alonzo.json
      GENESIS_CONWAY_PATH: /config/node/genesis/shelley/genesis.conway.json
      CARDANO_NODE_SUBMIT_HOST: submit-api
      NODE_SUBMIT_API_PORT: 8090
      CARDANO_NODE_SOCKET_PATH: /node/node.socket
      DEVKIT_ENABLED: false
      DEVKIT_URL: ~
      DEVKIT_PORT: ~
      YACI_HTTP_BASE_URL: http://yaci-indexer:9095/api/v1
      HTTP_CONNECT_TIMEOUT_SECONDS: 5
      HTTP_REQUEST_TIMEOUT_SECONDS: 5
    volumes:
      - ./config:/config
      - ./node-ipc:/node
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8082/network/options -H 'Content-Type: application/json' --data '{\"network_identifier\": {\"blockchain\": \"prime\",\"network\": \"mainnet\"},\"metadata\": {}}' -X POST" ]
      interval: 30s
      retries: 20
      start_period: 20s
      timeout: 10s
    restart: always

  init-rosetta-db:
    image: postgres:14.10-alpine
    environment:
      PGUSER: ${DB_USER}
      PGPASSWORD: ${DB_SECRET}
      PGDATABASE: postgres
      PGHOST: postgres
    entrypoint: >
      bash -c "
      psql -tc 'SELECT 1 FROM pg_database WHERE datname = \"rosetta\"' |
      grep -q 1 || (psql -c 'CREATE DATABASE rosetta' && psql -c 'GRANT ALL PRIVILEGES ON DATABASE rosetta TO postgres')"
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"

  yaci-indexer:
    image: apexfusion/apex-rosetta-java-yaci-indexer:1.0
    environment:
      NETWORK: mainnet
      YACI_SPRING_PROFILES: postgres
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: rosetta
      DB_USER: ${DB_USER}
      DB_SECRET: ${DB_SECRET}
      DB_SCHEMA: mainnet
      CARDANO_NODE_HOST: prime-relay
      CARDANO_NODE_PORT: 5521
      PROTOCOL_MAGIC: 764824073
      GENESIS_SHELLEY_PATH: /config/node/genesis/shelley/genesis.json
      GENESIS_BYRON_PATH: /config/node/genesis/byron/genesis.json
      GENESIS_ALONZO_PATH: /config/node/genesis/shelley/genesis.alonzo.json
      GENESIS_CONWAY_PATH: /config/node/genesis/shelley/genesis.conway.json
      PRUNING_ENABLED: false
      CARDANO_NODE_SOCKET_PATH: /node/node.socket
      CARDANO_NODE_VERSION: 10.1.4
      SEARCH_PAGE_SIZE: 100
    volumes:
      - ./config:/config
      - ./node-ipc:/node
    ports:
      - 9095:9095
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      prime-relay:
        condition: service_healthy

  submit-api:
    image: ghcr.io/intersectmbo/cardano-submit-api:10.1.4
    environment:
      - NETWORK=mainnet
    entrypoint: >-
      /nix/store/79fw2gwr6sc1m9jrpd82cv3043826rji-cardano-submit-api-exe-cardano-submit-api-10.1.0/bin/cardano-submit-api
      --config /config/config.yaml
      --mainnet
      --socket-path /node/node.socket
      --listen-address 0.0.0.0
    depends_on:
      - prime-relay
    volumes:
      - ./node-ipc:/node
      - ./config/submit-api:/config
    ports:
      - 8090:8090
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
